#include <SoftwareSerial.h>
#define Buffer_length 10
SoftwareSerial LCDserial(3, 2);
int salinity_power_pin = 8;
int solenoid_power_a = 12;
int solenoid_power_b = 13;
void setup() {
  Serial.begin(9600);
  LCDserial.begin(9600);
  pinMode (salinity_power_pin, OUTPUT);
  pinMode (solenoid_power_a, OUTPUT);
  pinMode (solenoid_power_b, OUTPUT);
  delay(500);
  LCDserial.write(254);
  LCDserial.write(1);
  delay(500);
  LCD_Display();
}

void loop() {
  int salinity_input_pin = 2;
  int count = 15;
  float salinity_ave, salinity_stdev;
  float current_reading;
  //solenoid_switching();
  sensor_reading_stats(salinity_power_pin, salinity_input_pin, count, &salinity_ave, &salinity_stdev);
  current_reading = current(salinity_ave);
  update_LCD(salinity_ave,current_reading);
  //Serial.println (salinity_ave);
  //Serial.println (",  ");
  //Serial.println (salinity_stdev);
  
}

void sensor_reading_stats (int power_pin, int input_pin, int n, float *ave, float *stdev) {
  int i, k;
  float reading [Buffer_length];
  k = min(n, Buffer_length);
  float salinitypercent;
  float dev, sum;
  //const float a = 0.133;
  //const float b = -0.000906;
  //const float c = -0.00000131;
  unsigned long currentMillis = millis();
  unsigned long lastMillis = 0;
  const long interval = 100;
  int Pstate = LOW;

  if (Pstate == LOW) {
    Pstate = HIGH;
  } else {
    Pstate = LOW;

    if (currentMillis - lastMillis >= interval) {

      lastMillis = currentMillis;
    }
  }

  for (i = 1 ; i <= k ; i++) {

    digitalWrite (power_pin, Pstate);
    delay (100);
    reading[i] = analogRead (input_pin);
    digitalWrite (power_pin, LOW);
    delay(10);
  }

  for (sum = 0.0, i = 1; i <= k; i++) {
    sum += reading[i];
  }
  *ave = sum / float(n);

  for (dev = 0.0, i = 1; i <= k; i++) {
    dev += pow(reading[i] - *ave, 2);
  }
  *stdev = sqrt (dev / float(k - 1));
  Serial.println(input_pin);
}

void update_LCD(float reading,float x) {

  char LCD_string[10];

  dtostrf(reading, 5, 2, LCD_string);
  LCDserial.write(254);
  LCDserial.write(192);
  LCDserial.write(LCD_string);

  dtostrf(reading, 5, 2, LCD_string);
  LCDserial.write(254);
  LCDserial.write(212);
  LCDserial.write(LCD_string);

  dtostrf(reading, 5, 2, LCD_string);
  LCDserial.write(254);
  LCDserial.write(199);
  LCDserial.write(LCD_string);

  dtostrf(x, 5, 2, LCD_string);
  LCDserial.write(254);
  LCDserial.write(219);
  LCDserial.write(LCD_string);

  dtostrf(reading, 5, 2, LCD_string);
  LCDserial.write(254);
  LCDserial.write(206);
  LCDserial.write(LCD_string);

  dtostrf(reading, 5, 2, LCD_string);
  LCDserial.write(254);
  LCDserial.write(226);
  LCDserial.write(LCD_string);
}

void LCD_Display() {
  LCDserial.write(254);
  LCDserial.write(129);
  LCDserial.write("LCL");

  LCDserial.write(254);
  LCDserial.write(135);
  LCDserial.write("SetPt");

  LCDserial.write(254);
  LCDserial.write(143);
  LCDserial.write("UCL");

  LCDserial.write(254);
  LCDserial.write(148);
  LCDserial.write("Salty");

  LCDserial.write(254);
  LCDserial.write(154);
  LCDserial.write("Current");

  LCDserial.write(254);
  LCDserial.write(163);
  LCDserial.write("DI");
}
void solenoid_switching(){
int pot;
int reading = analogRead(A0);
pot = map(reading,0,1023,500,2000);
pot = constrain(pot,500,2000);

  
  digitalWrite(solenoid_power_a,HIGH);
  digitalWrite(solenoid_power_b,LOW);
  delay(pot);
  digitalWrite(solenoid_power_a,LOW);
  digitalWrite(solenoid_power_b,HIGH);
  delay(pot);
  //Serial.print(pot);
}

float current(float x){

  const float a = 0.000333;
  const float b = 0.00867;
  float salinitypercent;
    salinitypercent = a*exp(x*b);
  return salinitypercent;
}
